//------------------------------------------------------------------------------
// <auto-generated>
//     這個程式碼是由範本產生。
//
//     對這個檔案進行手動變更可能導致您的應用程式產生未預期的行為。
//     如果重新產生程式碼，將會覆寫對這個檔案的手動變更。
// </auto-generated>
//------------------------------------------------------------------------------

namespace CMD
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CMSEntities : DbContext
    {
        public CMSEntities()
            : base("name=CMSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ALL_LOG> ALL_LOG { get; set; }
        public virtual DbSet<ERROR_LOG> ERROR_LOG { get; set; }
        public virtual DbSet<FATAL_LOG> FATAL_LOG { get; set; }
        public virtual DbSet<WARN_LOG> WARN_LOG { get; set; }
        public virtual DbSet<ACK_LOG> ACK_LOG { get; set; }
        public virtual DbSet<ACK_REASON> ACK_REASON { get; set; }
        public virtual DbSet<ACK_TYPE> ACK_TYPE { get; set; }
        public virtual DbSet<ClassList> ClassList { get; set; }
        public virtual DbSet<EmailList> EmailList { get; set; }
        public virtual DbSet<Funcs> Funcs { get; set; }
        public virtual DbSet<MailServerProfile> MailServerProfile { get; set; }
        public virtual DbSet<MonitorParams> MonitorParams { get; set; }
        public virtual DbSet<MonitorProperty> MonitorProperty { get; set; }
        public virtual DbSet<NotifyGroup> NotifyGroup { get; set; }
        public virtual DbSet<NotifyList> NotifyList { get; set; }
        public virtual DbSet<PhoneList> PhoneList { get; set; }
        public virtual DbSet<RoleAuthorityList> RoleAuthorityList { get; set; }
        public virtual DbSet<RoleFuncMapping> RoleFuncMapping { get; set; }
        public virtual DbSet<Roles> Roles { get; set; }
        public virtual DbSet<SHOW_LOG> SHOW_LOG { get; set; }
        public virtual DbSet<StatusList> StatusList { get; set; }
        public virtual DbSet<SYSTEM_LOG> SYSTEM_LOG { get; set; }
        public virtual DbSet<TextMessageProfile> TextMessageProfile { get; set; }
        public virtual DbSet<TmpClassList> TmpClassList { get; set; }
        public virtual DbSet<TmpEmailList> TmpEmailList { get; set; }
        public virtual DbSet<TmpFuncs> TmpFuncs { get; set; }
        public virtual DbSet<TmpMailServerProfile> TmpMailServerProfile { get; set; }
        public virtual DbSet<TmpNotifyGroup> TmpNotifyGroup { get; set; }
        public virtual DbSet<TmpNotifyList> TmpNotifyList { get; set; }
        public virtual DbSet<TmpPhoneList> TmpPhoneList { get; set; }
        public virtual DbSet<TmpRoleAuthorityList> TmpRoleAuthorityList { get; set; }
        public virtual DbSet<TmpRoleFuncMapping> TmpRoleFuncMapping { get; set; }
        public virtual DbSet<TmpRoles> TmpRoles { get; set; }
        public virtual DbSet<TmpStatusList> TmpStatusList { get; set; }
        public virtual DbSet<TmpTextMessageProfile> TmpTextMessageProfile { get; set; }
        public virtual DbSet<TmpUsers> TmpUsers { get; set; }
        public virtual DbSet<TypeList> TypeList { get; set; }
        public virtual DbSet<Users> Users { get; set; }
        public virtual DbSet<ACK_MAPPING> ACK_MAPPING { get; set; }
        public virtual DbSet<SysList> SysList { get; set; }
        public virtual DbSet<TmpSysList> TmpSysList { get; set; }
        public virtual DbSet<v_Error_Fatal_Result> v_Error_Fatal_Result { get; set; }
        public virtual DbSet<v_Error_Fatal_Result_Detail> v_Error_Fatal_Result_Detail { get; set; }
        public virtual DbSet<v_Error_Fatal_Result_For_Search> v_Error_Fatal_Result_For_Search { get; set; }
        public virtual DbSet<v_ACK_Data> v_ACK_Data { get; set; }
        public virtual DbSet<v_ACKREASONList> v_ACKREASONList { get; set; }
        public virtual DbSet<v_ACKTYPEList> v_ACKTYPEList { get; set; }
        public virtual DbSet<v_btn_IdInfo_Result> v_btn_IdInfo_Result { get; set; }
        public virtual DbSet<v_ClassList> v_ClassList { get; set; }
        public virtual DbSet<v_MailServerProfileData> v_MailServerProfileData { get; set; }
        public virtual DbSet<v_MailServerProfileList> v_MailServerProfileList { get; set; }
        public virtual DbSet<v_Monitor_All_Reult_History> v_Monitor_All_Reult_History { get; set; }
        public virtual DbSet<v_Monitor_Data> v_Monitor_Data { get; set; }
        public virtual DbSet<v_Monitor_Error_Fatal_Result_History> v_Monitor_Error_Fatal_Result_History { get; set; }
        public virtual DbSet<v_Monitor_Reult_History> v_Monitor_Reult_History { get; set; }
        public virtual DbSet<v_Monitorproperty_View_Detail> v_Monitorproperty_View_Detail { get; set; }
        public virtual DbSet<v_NotifyGroupData> v_NotifyGroupData { get; set; }
        public virtual DbSet<v_NotifyGroupList> v_NotifyGroupList { get; set; }
        public virtual DbSet<v_ReportSourceData> v_ReportSourceData { get; set; }
        public virtual DbSet<v_Status_Change_Result> v_Status_Change_Result { get; set; }
        public virtual DbSet<v_Status_Change_Result_Detail> v_Status_Change_Result_Detail { get; set; }
        public virtual DbSet<v_SubjectList> v_SubjectList { get; set; }
        public virtual DbSet<v_SysList> v_SysList { get; set; }
        public virtual DbSet<v_TextMessageProfileData> v_TextMessageProfileData { get; set; }
        public virtual DbSet<v_TextMessageProfileList> v_TextMessageProfileList { get; set; }
        public virtual DbSet<v_TypeList> v_TypeList { get; set; }
        public virtual DbSet<v_UserList> v_UserList { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<v_StatusList> v_StatusList { get; set; }
        public virtual DbSet<v_MonitorProperty_Detail> v_MonitorProperty_Detail { get; set; }
        public virtual DbSet<TmpMonitorProperty> TmpMonitorProperty { get; set; }
        public virtual DbSet<v_TmpMonitorproperty_View_Detail> v_TmpMonitorproperty_View_Detail { get; set; }
        public virtual DbSet<v_TmpMonitorProperty_Detail> v_TmpMonitorProperty_Detail { get; set; }
    
        public virtual int ups_bathchUpdateHostMnoitorData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ups_bathchUpdateHostMnoitorData");
        }
    
        public virtual int usp_bathchUpdate2SHOWLOG()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_bathchUpdate2SHOWLOG");
        }
    
        public virtual int usp_bathchUpdate2SHOWLOG_20141020()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_bathchUpdate2SHOWLOG_20141020");
        }
    
        public virtual int usp_ackData(string useCustomerAckType, string useCustomerAckReason, Nullable<int> ackid, string acktype, string ackreason, string ackaccount, Nullable<System.DateTime> ack_time)
        {
            var useCustomerAckTypeParameter = useCustomerAckType != null ?
                new ObjectParameter("UseCustomerAckType", useCustomerAckType) :
                new ObjectParameter("UseCustomerAckType", typeof(string));
    
            var useCustomerAckReasonParameter = useCustomerAckReason != null ?
                new ObjectParameter("UseCustomerAckReason", useCustomerAckReason) :
                new ObjectParameter("UseCustomerAckReason", typeof(string));
    
            var ackidParameter = ackid.HasValue ?
                new ObjectParameter("ackid", ackid) :
                new ObjectParameter("ackid", typeof(int));
    
            var acktypeParameter = acktype != null ?
                new ObjectParameter("acktype", acktype) :
                new ObjectParameter("acktype", typeof(string));
    
            var ackreasonParameter = ackreason != null ?
                new ObjectParameter("ackreason", ackreason) :
                new ObjectParameter("ackreason", typeof(string));
    
            var ackaccountParameter = ackaccount != null ?
                new ObjectParameter("ackaccount", ackaccount) :
                new ObjectParameter("ackaccount", typeof(string));
    
            var ack_timeParameter = ack_time.HasValue ?
                new ObjectParameter("ack_time", ack_time) :
                new ObjectParameter("ack_time", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ackData", useCustomerAckTypeParameter, useCustomerAckReasonParameter, ackidParameter, acktypeParameter, ackreasonParameter, ackaccountParameter, ack_timeParameter);
        }
    
        public virtual int usp_batchInsert2ACKLOG()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_batchInsert2ACKLOG");
        }
    
        public virtual ObjectResult<usp_batchInsert2ACKLOG_20141009_Result> usp_batchInsert2ACKLOG_20141009()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_batchInsert2ACKLOG_20141009_Result>("usp_batchInsert2ACKLOG_20141009");
        }
    
        public virtual ObjectResult<usp_delete2NotifyGroup_Result> usp_delete2NotifyGroup(Nullable<int> g_id)
        {
            var g_idParameter = g_id.HasValue ?
                new ObjectParameter("g_id", g_id) :
                new ObjectParameter("g_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_delete2NotifyGroup_Result>("usp_delete2NotifyGroup", g_idParameter);
        }
    
        public virtual ObjectResult<usp_enableMonitorProperty_Result> usp_enableMonitorProperty(Nullable<bool> isenable, string s_no, Nullable<System.DateTime> update_time, string update_account, string review_account)
        {
            var isenableParameter = isenable.HasValue ?
                new ObjectParameter("isenable", isenable) :
                new ObjectParameter("isenable", typeof(bool));
    
            var s_noParameter = s_no != null ?
                new ObjectParameter("s_no", s_no) :
                new ObjectParameter("s_no", typeof(string));
    
            var update_timeParameter = update_time.HasValue ?
                new ObjectParameter("update_time", update_time) :
                new ObjectParameter("update_time", typeof(System.DateTime));
    
            var update_accountParameter = update_account != null ?
                new ObjectParameter("update_account", update_account) :
                new ObjectParameter("update_account", typeof(string));
    
            var review_accountParameter = review_account != null ?
                new ObjectParameter("review_account", review_account) :
                new ObjectParameter("review_account", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_enableMonitorProperty_Result>("usp_enableMonitorProperty", isenableParameter, s_noParameter, update_timeParameter, update_accountParameter, review_accountParameter);
        }
    
        public virtual int usp_genReport(string reportType, string @class, string type, string sys, Nullable<System.DateTime> stratDateTime, Nullable<System.DateTime> endDateTime)
        {
            var reportTypeParameter = reportType != null ?
                new ObjectParameter("ReportType", reportType) :
                new ObjectParameter("ReportType", typeof(string));
    
            var classParameter = @class != null ?
                new ObjectParameter("class", @class) :
                new ObjectParameter("class", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var sysParameter = sys != null ?
                new ObjectParameter("sys", sys) :
                new ObjectParameter("sys", typeof(string));
    
            var stratDateTimeParameter = stratDateTime.HasValue ?
                new ObjectParameter("StratDateTime", stratDateTime) :
                new ObjectParameter("StratDateTime", typeof(System.DateTime));
    
            var endDateTimeParameter = endDateTime.HasValue ?
                new ObjectParameter("EndDateTime", endDateTime) :
                new ObjectParameter("EndDateTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_genReport", reportTypeParameter, classParameter, typeParameter, sysParameter, stratDateTimeParameter, endDateTimeParameter);
        }
    
        public virtual ObjectResult<usp_getAckCount_Result> usp_getAckCount(string @class)
        {
            var classParameter = @class != null ?
                new ObjectParameter("class", @class) :
                new ObjectParameter("class", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getAckCount_Result>("usp_getAckCount", classParameter);
        }
    
        public virtual ObjectResult<usp_getChange2BadCount_Result> usp_getChange2BadCount(string @class)
        {
            var classParameter = @class != null ?
                new ObjectParameter("class", @class) :
                new ObjectParameter("class", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getChange2BadCount_Result>("usp_getChange2BadCount", classParameter);
        }
    
        public virtual ObjectResult<usp_getMailServerProfile_Result> usp_getMailServerProfile(Nullable<int> id_X)
        {
            var id_XParameter = id_X.HasValue ?
                new ObjectParameter("id_X", id_X) :
                new ObjectParameter("id_X", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getMailServerProfile_Result>("usp_getMailServerProfile", id_XParameter);
        }
    
        public virtual int usp_getSHOWDATA(string @class)
        {
            var classParameter = @class != null ?
                new ObjectParameter("class", @class) :
                new ObjectParameter("class", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_getSHOWDATA", classParameter);
        }
    
        public virtual ObjectResult<usp_getSysMemu_Result> usp_getSysMemu(string uid)
        {
            var uidParameter = uid != null ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getSysMemu_Result>("usp_getSysMemu", uidParameter);
        }
    
        public virtual ObjectResult<usp_getTextMessageProfile_Result> usp_getTextMessageProfile(Nullable<int> id_X)
        {
            var id_XParameter = id_X.HasValue ?
                new ObjectParameter("id_X", id_X) :
                new ObjectParameter("id_X", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getTextMessageProfile_Result>("usp_getTextMessageProfile", id_XParameter);
        }
    
        public virtual ObjectResult<usp_getUserList_Result> usp_getUserList(Nullable<int> g_id_X, string mode_X)
        {
            var g_id_XParameter = g_id_X.HasValue ?
                new ObjectParameter("g_id_X", g_id_X) :
                new ObjectParameter("g_id_X", typeof(int));
    
            var mode_XParameter = mode_X != null ?
                new ObjectParameter("Mode_X", mode_X) :
                new ObjectParameter("Mode_X", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getUserList_Result>("usp_getUserList", g_id_XParameter, mode_XParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_getUserRole(string u_id)
        {
            var u_idParameter = u_id != null ?
                new ObjectParameter("u_id", u_id) :
                new ObjectParameter("u_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_getUserRole", u_idParameter);
        }
    
        public virtual ObjectResult<usp_insert2ACKLOG_Result> usp_insert2ACKLOG(Nullable<int> sh_id, string s_no, string s_status, Nullable<System.DateTime> n_time, Nullable<System.DateTime> create_time)
        {
            var sh_idParameter = sh_id.HasValue ?
                new ObjectParameter("sh_id", sh_id) :
                new ObjectParameter("sh_id", typeof(int));
    
            var s_noParameter = s_no != null ?
                new ObjectParameter("s_no", s_no) :
                new ObjectParameter("s_no", typeof(string));
    
            var s_statusParameter = s_status != null ?
                new ObjectParameter("s_status", s_status) :
                new ObjectParameter("s_status", typeof(string));
    
            var n_timeParameter = n_time.HasValue ?
                new ObjectParameter("n_time", n_time) :
                new ObjectParameter("n_time", typeof(System.DateTime));
    
            var create_timeParameter = create_time.HasValue ?
                new ObjectParameter("create_time", create_time) :
                new ObjectParameter("create_time", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_insert2ACKLOG_Result>("usp_insert2ACKLOG", sh_idParameter, s_noParameter, s_statusParameter, n_timeParameter, create_timeParameter);
        }
    
        public virtual ObjectResult<usp_insert2ACKMAPPING_Result> usp_insert2ACKMAPPING(Nullable<int> a_id, Nullable<int> ar_id, Nullable<System.DateTime> create_time, string create_account, Nullable<System.DateTime> update_time, string update_account)
        {
            var a_idParameter = a_id.HasValue ?
                new ObjectParameter("a_id", a_id) :
                new ObjectParameter("a_id", typeof(int));
    
            var ar_idParameter = ar_id.HasValue ?
                new ObjectParameter("ar_id", ar_id) :
                new ObjectParameter("ar_id", typeof(int));
    
            var create_timeParameter = create_time.HasValue ?
                new ObjectParameter("create_time", create_time) :
                new ObjectParameter("create_time", typeof(System.DateTime));
    
            var create_accountParameter = create_account != null ?
                new ObjectParameter("create_account", create_account) :
                new ObjectParameter("create_account", typeof(string));
    
            var update_timeParameter = update_time.HasValue ?
                new ObjectParameter("update_time", update_time) :
                new ObjectParameter("update_time", typeof(System.DateTime));
    
            var update_accountParameter = update_account != null ?
                new ObjectParameter("update_account", update_account) :
                new ObjectParameter("update_account", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_insert2ACKMAPPING_Result>("usp_insert2ACKMAPPING", a_idParameter, ar_idParameter, create_timeParameter, create_accountParameter, update_timeParameter, update_accountParameter);
        }
    
        public virtual ObjectResult<usp_insert2ACKREASON_Result> usp_insert2ACKREASON(string ar_value, Nullable<System.DateTime> create_time, string create_account, Nullable<System.DateTime> update_time, string update_account)
        {
            var ar_valueParameter = ar_value != null ?
                new ObjectParameter("ar_value", ar_value) :
                new ObjectParameter("ar_value", typeof(string));
    
            var create_timeParameter = create_time.HasValue ?
                new ObjectParameter("create_time", create_time) :
                new ObjectParameter("create_time", typeof(System.DateTime));
    
            var create_accountParameter = create_account != null ?
                new ObjectParameter("create_account", create_account) :
                new ObjectParameter("create_account", typeof(string));
    
            var update_timeParameter = update_time.HasValue ?
                new ObjectParameter("update_time", update_time) :
                new ObjectParameter("update_time", typeof(System.DateTime));
    
            var update_accountParameter = update_account != null ?
                new ObjectParameter("update_account", update_account) :
                new ObjectParameter("update_account", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_insert2ACKREASON_Result>("usp_insert2ACKREASON", ar_valueParameter, create_timeParameter, create_accountParameter, update_timeParameter, update_accountParameter);
        }
    
        public virtual ObjectResult<usp_insert2ACKTYPE_Result> usp_insert2ACKTYPE(string a_value, Nullable<System.DateTime> create_time, string create_account, Nullable<System.DateTime> update_time, string update_account)
        {
            var a_valueParameter = a_value != null ?
                new ObjectParameter("a_value", a_value) :
                new ObjectParameter("a_value", typeof(string));
    
            var create_timeParameter = create_time.HasValue ?
                new ObjectParameter("create_time", create_time) :
                new ObjectParameter("create_time", typeof(System.DateTime));
    
            var create_accountParameter = create_account != null ?
                new ObjectParameter("create_account", create_account) :
                new ObjectParameter("create_account", typeof(string));
    
            var update_timeParameter = update_time.HasValue ?
                new ObjectParameter("update_time", update_time) :
                new ObjectParameter("update_time", typeof(System.DateTime));
    
            var update_accountParameter = update_account != null ?
                new ObjectParameter("update_account", update_account) :
                new ObjectParameter("update_account", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_insert2ACKTYPE_Result>("usp_insert2ACKTYPE", a_valueParameter, create_timeParameter, create_accountParameter, update_timeParameter, update_accountParameter);
        }
    
        public virtual ObjectResult<usp_insert2ALLLOG_Result> usp_insert2ALLLOG(string s_no, string s_status, Nullable<int> ackid)
        {
            var s_noParameter = s_no != null ?
                new ObjectParameter("s_no", s_no) :
                new ObjectParameter("s_no", typeof(string));
    
            var s_statusParameter = s_status != null ?
                new ObjectParameter("s_status", s_status) :
                new ObjectParameter("s_status", typeof(string));
    
            var ackidParameter = ackid.HasValue ?
                new ObjectParameter("ackid", ackid) :
                new ObjectParameter("ackid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_insert2ALLLOG_Result>("usp_insert2ALLLOG", s_noParameter, s_statusParameter, ackidParameter);
        }
    
        public virtual ObjectResult<usp_insert2EmailList_Result> usp_insert2EmailList(string u_id, string email, Nullable<System.DateTime> create_time, string create_account, Nullable<System.DateTime> update_time, string update_account, string review_account)
        {
            var u_idParameter = u_id != null ?
                new ObjectParameter("u_id", u_id) :
                new ObjectParameter("u_id", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var create_timeParameter = create_time.HasValue ?
                new ObjectParameter("create_time", create_time) :
                new ObjectParameter("create_time", typeof(System.DateTime));
    
            var create_accountParameter = create_account != null ?
                new ObjectParameter("create_account", create_account) :
                new ObjectParameter("create_account", typeof(string));
    
            var update_timeParameter = update_time.HasValue ?
                new ObjectParameter("update_time", update_time) :
                new ObjectParameter("update_time", typeof(System.DateTime));
    
            var update_accountParameter = update_account != null ?
                new ObjectParameter("update_account", update_account) :
                new ObjectParameter("update_account", typeof(string));
    
            var review_accountParameter = review_account != null ?
                new ObjectParameter("review_account", review_account) :
                new ObjectParameter("review_account", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_insert2EmailList_Result>("usp_insert2EmailList", u_idParameter, emailParameter, create_timeParameter, create_accountParameter, update_timeParameter, update_accountParameter, review_accountParameter);
        }
    
        public virtual ObjectResult<usp_insert2MailServerProfile_Result> usp_insert2MailServerProfile(string name, string position, Nullable<int> port, string mailfrom, string mailsubject, string mailbody, Nullable<System.DateTime> create_time, string create_account, Nullable<System.DateTime> update_time, string update_account, string review_account)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var positionParameter = position != null ?
                new ObjectParameter("position", position) :
                new ObjectParameter("position", typeof(string));
    
            var portParameter = port.HasValue ?
                new ObjectParameter("port", port) :
                new ObjectParameter("port", typeof(int));
    
            var mailfromParameter = mailfrom != null ?
                new ObjectParameter("mailfrom", mailfrom) :
                new ObjectParameter("mailfrom", typeof(string));
    
            var mailsubjectParameter = mailsubject != null ?
                new ObjectParameter("mailsubject", mailsubject) :
                new ObjectParameter("mailsubject", typeof(string));
    
            var mailbodyParameter = mailbody != null ?
                new ObjectParameter("mailbody", mailbody) :
                new ObjectParameter("mailbody", typeof(string));
    
            var create_timeParameter = create_time.HasValue ?
                new ObjectParameter("create_time", create_time) :
                new ObjectParameter("create_time", typeof(System.DateTime));
    
            var create_accountParameter = create_account != null ?
                new ObjectParameter("create_account", create_account) :
                new ObjectParameter("create_account", typeof(string));
    
            var update_timeParameter = update_time.HasValue ?
                new ObjectParameter("update_time", update_time) :
                new ObjectParameter("update_time", typeof(System.DateTime));
    
            var update_accountParameter = update_account != null ?
                new ObjectParameter("update_account", update_account) :
                new ObjectParameter("update_account", typeof(string));
    
            var review_accountParameter = review_account != null ?
                new ObjectParameter("review_account", review_account) :
                new ObjectParameter("review_account", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_insert2MailServerProfile_Result>("usp_insert2MailServerProfile", nameParameter, positionParameter, portParameter, mailfromParameter, mailsubjectParameter, mailbodyParameter, create_timeParameter, create_accountParameter, update_timeParameter, update_accountParameter, review_accountParameter);
        }
    
        public virtual ObjectResult<usp_insert2MonitorParams_Result> usp_insert2MonitorParams(string s_no, string value, Nullable<System.DateTime> create_time, string create_account, Nullable<System.DateTime> update_time, string update_account, string review_account)
        {
            var s_noParameter = s_no != null ?
                new ObjectParameter("s_no", s_no) :
                new ObjectParameter("s_no", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var create_timeParameter = create_time.HasValue ?
                new ObjectParameter("create_time", create_time) :
                new ObjectParameter("create_time", typeof(System.DateTime));
    
            var create_accountParameter = create_account != null ?
                new ObjectParameter("create_account", create_account) :
                new ObjectParameter("create_account", typeof(string));
    
            var update_timeParameter = update_time.HasValue ?
                new ObjectParameter("update_time", update_time) :
                new ObjectParameter("update_time", typeof(System.DateTime));
    
            var update_accountParameter = update_account != null ?
                new ObjectParameter("update_account", update_account) :
                new ObjectParameter("update_account", typeof(string));
    
            var review_accountParameter = review_account != null ?
                new ObjectParameter("review_account", review_account) :
                new ObjectParameter("review_account", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_insert2MonitorParams_Result>("usp_insert2MonitorParams", s_noParameter, valueParameter, create_timeParameter, create_accountParameter, update_timeParameter, update_accountParameter, review_accountParameter);
        }
    
        public virtual int usp_insert2MonitorProperty(Nullable<bool> isenable, string s_no, string s_class, string s_type, string s_sys, string s_subject, string s_content, string s_position, Nullable<int> s_timeout, Nullable<int> s_frequency, Nullable<int> mailServerProfile, Nullable<int> textMessageProfile, string params_host, Nullable<bool> w_sendmail, Nullable<bool> w_sendmessage, Nullable<int> w_notify, Nullable<int> w_mail_notify_limit, Nullable<int> w_message_notify_limit, Nullable<bool> e_sendmail, Nullable<bool> e_sendmessage, Nullable<int> e_notify, Nullable<int> e_mail_notify_limit, Nullable<int> e_message_notify_limit, Nullable<bool> f_sendmail, Nullable<bool> f_sendmessage, Nullable<int> f_notify, Nullable<int> f_mail_notify_limit, Nullable<int> f_message_notify_limit, Nullable<bool> needNonitorPrams, string value, string sysadmin, Nullable<System.DateTime> create_time, string create_account, Nullable<System.DateTime> update_time, string update_account, string review_account)
        {
            var isenableParameter = isenable.HasValue ?
                new ObjectParameter("isenable", isenable) :
                new ObjectParameter("isenable", typeof(bool));
    
            var s_noParameter = s_no != null ?
                new ObjectParameter("s_no", s_no) :
                new ObjectParameter("s_no", typeof(string));
    
            var s_classParameter = s_class != null ?
                new ObjectParameter("s_class", s_class) :
                new ObjectParameter("s_class", typeof(string));
    
            var s_typeParameter = s_type != null ?
                new ObjectParameter("s_type", s_type) :
                new ObjectParameter("s_type", typeof(string));
    
            var s_sysParameter = s_sys != null ?
                new ObjectParameter("s_sys", s_sys) :
                new ObjectParameter("s_sys", typeof(string));
    
            var s_subjectParameter = s_subject != null ?
                new ObjectParameter("s_subject", s_subject) :
                new ObjectParameter("s_subject", typeof(string));
    
            var s_contentParameter = s_content != null ?
                new ObjectParameter("s_content", s_content) :
                new ObjectParameter("s_content", typeof(string));
    
            var s_positionParameter = s_position != null ?
                new ObjectParameter("s_position", s_position) :
                new ObjectParameter("s_position", typeof(string));
    
            var s_timeoutParameter = s_timeout.HasValue ?
                new ObjectParameter("s_timeout", s_timeout) :
                new ObjectParameter("s_timeout", typeof(int));
    
            var s_frequencyParameter = s_frequency.HasValue ?
                new ObjectParameter("s_frequency", s_frequency) :
                new ObjectParameter("s_frequency", typeof(int));
    
            var mailServerProfileParameter = mailServerProfile.HasValue ?
                new ObjectParameter("MailServerProfile", mailServerProfile) :
                new ObjectParameter("MailServerProfile", typeof(int));
    
            var textMessageProfileParameter = textMessageProfile.HasValue ?
                new ObjectParameter("TextMessageProfile", textMessageProfile) :
                new ObjectParameter("TextMessageProfile", typeof(int));
    
            var params_hostParameter = params_host != null ?
                new ObjectParameter("params_host", params_host) :
                new ObjectParameter("params_host", typeof(string));
    
            var w_sendmailParameter = w_sendmail.HasValue ?
                new ObjectParameter("w_sendmail", w_sendmail) :
                new ObjectParameter("w_sendmail", typeof(bool));
    
            var w_sendmessageParameter = w_sendmessage.HasValue ?
                new ObjectParameter("w_sendmessage", w_sendmessage) :
                new ObjectParameter("w_sendmessage", typeof(bool));
    
            var w_notifyParameter = w_notify.HasValue ?
                new ObjectParameter("w_notify", w_notify) :
                new ObjectParameter("w_notify", typeof(int));
    
            var w_mail_notify_limitParameter = w_mail_notify_limit.HasValue ?
                new ObjectParameter("w_mail_notify_limit", w_mail_notify_limit) :
                new ObjectParameter("w_mail_notify_limit", typeof(int));
    
            var w_message_notify_limitParameter = w_message_notify_limit.HasValue ?
                new ObjectParameter("w_message_notify_limit", w_message_notify_limit) :
                new ObjectParameter("w_message_notify_limit", typeof(int));
    
            var e_sendmailParameter = e_sendmail.HasValue ?
                new ObjectParameter("e_sendmail", e_sendmail) :
                new ObjectParameter("e_sendmail", typeof(bool));
    
            var e_sendmessageParameter = e_sendmessage.HasValue ?
                new ObjectParameter("e_sendmessage", e_sendmessage) :
                new ObjectParameter("e_sendmessage", typeof(bool));
    
            var e_notifyParameter = e_notify.HasValue ?
                new ObjectParameter("e_notify", e_notify) :
                new ObjectParameter("e_notify", typeof(int));
    
            var e_mail_notify_limitParameter = e_mail_notify_limit.HasValue ?
                new ObjectParameter("e_mail_notify_limit", e_mail_notify_limit) :
                new ObjectParameter("e_mail_notify_limit", typeof(int));
    
            var e_message_notify_limitParameter = e_message_notify_limit.HasValue ?
                new ObjectParameter("e_message_notify_limit", e_message_notify_limit) :
                new ObjectParameter("e_message_notify_limit", typeof(int));
    
            var f_sendmailParameter = f_sendmail.HasValue ?
                new ObjectParameter("f_sendmail", f_sendmail) :
                new ObjectParameter("f_sendmail", typeof(bool));
    
            var f_sendmessageParameter = f_sendmessage.HasValue ?
                new ObjectParameter("f_sendmessage", f_sendmessage) :
                new ObjectParameter("f_sendmessage", typeof(bool));
    
            var f_notifyParameter = f_notify.HasValue ?
                new ObjectParameter("f_notify", f_notify) :
                new ObjectParameter("f_notify", typeof(int));
    
            var f_mail_notify_limitParameter = f_mail_notify_limit.HasValue ?
                new ObjectParameter("f_mail_notify_limit", f_mail_notify_limit) :
                new ObjectParameter("f_mail_notify_limit", typeof(int));
    
            var f_message_notify_limitParameter = f_message_notify_limit.HasValue ?
                new ObjectParameter("f_message_notify_limit", f_message_notify_limit) :
                new ObjectParameter("f_message_notify_limit", typeof(int));
    
            var needNonitorPramsParameter = needNonitorPrams.HasValue ?
                new ObjectParameter("NeedNonitorPrams", needNonitorPrams) :
                new ObjectParameter("NeedNonitorPrams", typeof(bool));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var sysadminParameter = sysadmin != null ?
                new ObjectParameter("sysadmin", sysadmin) :
                new ObjectParameter("sysadmin", typeof(string));
    
            var create_timeParameter = create_time.HasValue ?
                new ObjectParameter("create_time", create_time) :
                new ObjectParameter("create_time", typeof(System.DateTime));
    
            var create_accountParameter = create_account != null ?
                new ObjectParameter("create_account", create_account) :
                new ObjectParameter("create_account", typeof(string));
    
            var update_timeParameter = update_time.HasValue ?
                new ObjectParameter("update_time", update_time) :
                new ObjectParameter("update_time", typeof(System.DateTime));
    
            var update_accountParameter = update_account != null ?
                new ObjectParameter("update_account", update_account) :
                new ObjectParameter("update_account", typeof(string));
    
            var review_accountParameter = review_account != null ?
                new ObjectParameter("review_account", review_account) :
                new ObjectParameter("review_account", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_insert2MonitorProperty", isenableParameter, s_noParameter, s_classParameter, s_typeParameter, s_sysParameter, s_subjectParameter, s_contentParameter, s_positionParameter, s_timeoutParameter, s_frequencyParameter, mailServerProfileParameter, textMessageProfileParameter, params_hostParameter, w_sendmailParameter, w_sendmessageParameter, w_notifyParameter, w_mail_notify_limitParameter, w_message_notify_limitParameter, e_sendmailParameter, e_sendmessageParameter, e_notifyParameter, e_mail_notify_limitParameter, e_message_notify_limitParameter, f_sendmailParameter, f_sendmessageParameter, f_notifyParameter, f_mail_notify_limitParameter, f_message_notify_limitParameter, needNonitorPramsParameter, valueParameter, sysadminParameter, create_timeParameter, create_accountParameter, update_timeParameter, update_accountParameter, review_accountParameter);
        }
    
        public virtual ObjectResult<usp_insert2NotifyGroup_Result> usp_insert2NotifyGroup(string g_name, Nullable<System.DateTime> create_time, string create_account, Nullable<System.DateTime> update_time, string update_account, string review_account)
        {
            var g_nameParameter = g_name != null ?
                new ObjectParameter("g_name", g_name) :
                new ObjectParameter("g_name", typeof(string));
    
            var create_timeParameter = create_time.HasValue ?
                new ObjectParameter("create_time", create_time) :
                new ObjectParameter("create_time", typeof(System.DateTime));
    
            var create_accountParameter = create_account != null ?
                new ObjectParameter("create_account", create_account) :
                new ObjectParameter("create_account", typeof(string));
    
            var update_timeParameter = update_time.HasValue ?
                new ObjectParameter("update_time", update_time) :
                new ObjectParameter("update_time", typeof(System.DateTime));
    
            var update_accountParameter = update_account != null ?
                new ObjectParameter("update_account", update_account) :
                new ObjectParameter("update_account", typeof(string));
    
            var review_accountParameter = review_account != null ?
                new ObjectParameter("review_account", review_account) :
                new ObjectParameter("review_account", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_insert2NotifyGroup_Result>("usp_insert2NotifyGroup", g_nameParameter, create_timeParameter, create_accountParameter, update_timeParameter, update_accountParameter, review_accountParameter);
        }
    
        public virtual ObjectResult<usp_insert2NotifyList_Result> usp_insert2NotifyList(Nullable<int> g_id, string u_id, Nullable<System.DateTime> create_time, string create_account, Nullable<System.DateTime> update_time, string update_account, string review_account)
        {
            var g_idParameter = g_id.HasValue ?
                new ObjectParameter("g_id", g_id) :
                new ObjectParameter("g_id", typeof(int));
    
            var u_idParameter = u_id != null ?
                new ObjectParameter("u_id", u_id) :
                new ObjectParameter("u_id", typeof(string));
    
            var create_timeParameter = create_time.HasValue ?
                new ObjectParameter("create_time", create_time) :
                new ObjectParameter("create_time", typeof(System.DateTime));
    
            var create_accountParameter = create_account != null ?
                new ObjectParameter("create_account", create_account) :
                new ObjectParameter("create_account", typeof(string));
    
            var update_timeParameter = update_time.HasValue ?
                new ObjectParameter("update_time", update_time) :
                new ObjectParameter("update_time", typeof(System.DateTime));
    
            var update_accountParameter = update_account != null ?
                new ObjectParameter("update_account", update_account) :
                new ObjectParameter("update_account", typeof(string));
    
            var review_accountParameter = review_account != null ?
                new ObjectParameter("review_account", review_account) :
                new ObjectParameter("review_account", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_insert2NotifyList_Result>("usp_insert2NotifyList", g_idParameter, u_idParameter, create_timeParameter, create_accountParameter, update_timeParameter, update_accountParameter, review_accountParameter);
        }
    
        public virtual ObjectResult<usp_insert2NotifyList_for_NotifyGroup_insert_Result> usp_insert2NotifyList_for_NotifyGroup_insert(Nullable<int> g_id, string u_id, Nullable<System.DateTime> create_time, string create_account, Nullable<System.DateTime> update_time, string update_account, string review_account)
        {
            var g_idParameter = g_id.HasValue ?
                new ObjectParameter("g_id", g_id) :
                new ObjectParameter("g_id", typeof(int));
    
            var u_idParameter = u_id != null ?
                new ObjectParameter("u_id", u_id) :
                new ObjectParameter("u_id", typeof(string));
    
            var create_timeParameter = create_time.HasValue ?
                new ObjectParameter("create_time", create_time) :
                new ObjectParameter("create_time", typeof(System.DateTime));
    
            var create_accountParameter = create_account != null ?
                new ObjectParameter("create_account", create_account) :
                new ObjectParameter("create_account", typeof(string));
    
            var update_timeParameter = update_time.HasValue ?
                new ObjectParameter("update_time", update_time) :
                new ObjectParameter("update_time", typeof(System.DateTime));
    
            var update_accountParameter = update_account != null ?
                new ObjectParameter("update_account", update_account) :
                new ObjectParameter("update_account", typeof(string));
    
            var review_accountParameter = review_account != null ?
                new ObjectParameter("review_account", review_account) :
                new ObjectParameter("review_account", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_insert2NotifyList_for_NotifyGroup_insert_Result>("usp_insert2NotifyList_for_NotifyGroup_insert", g_idParameter, u_idParameter, create_timeParameter, create_accountParameter, update_timeParameter, update_accountParameter, review_accountParameter);
        }
    
        public virtual ObjectResult<usp_insert2NotifyList_for_NotifyGroup_update_Result> usp_insert2NotifyList_for_NotifyGroup_update(Nullable<int> g_id, string u_id, Nullable<System.DateTime> create_time, string create_account, Nullable<System.DateTime> update_time, string update_account, string review_account)
        {
            var g_idParameter = g_id.HasValue ?
                new ObjectParameter("g_id", g_id) :
                new ObjectParameter("g_id", typeof(int));
    
            var u_idParameter = u_id != null ?
                new ObjectParameter("u_id", u_id) :
                new ObjectParameter("u_id", typeof(string));
    
            var create_timeParameter = create_time.HasValue ?
                new ObjectParameter("create_time", create_time) :
                new ObjectParameter("create_time", typeof(System.DateTime));
    
            var create_accountParameter = create_account != null ?
                new ObjectParameter("create_account", create_account) :
                new ObjectParameter("create_account", typeof(string));
    
            var update_timeParameter = update_time.HasValue ?
                new ObjectParameter("update_time", update_time) :
                new ObjectParameter("update_time", typeof(System.DateTime));
    
            var update_accountParameter = update_account != null ?
                new ObjectParameter("update_account", update_account) :
                new ObjectParameter("update_account", typeof(string));
    
            var review_accountParameter = review_account != null ?
                new ObjectParameter("review_account", review_account) :
                new ObjectParameter("review_account", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_insert2NotifyList_for_NotifyGroup_update_Result>("usp_insert2NotifyList_for_NotifyGroup_update", g_idParameter, u_idParameter, create_timeParameter, create_accountParameter, update_timeParameter, update_accountParameter, review_accountParameter);
        }
    
        public virtual ObjectResult<usp_insert2PhoneList_Result> usp_insert2PhoneList(string u_id, string phone, Nullable<System.DateTime> create_time, string create_account, Nullable<System.DateTime> update_time, string update_account, string review_account)
        {
            var u_idParameter = u_id != null ?
                new ObjectParameter("u_id", u_id) :
                new ObjectParameter("u_id", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var create_timeParameter = create_time.HasValue ?
                new ObjectParameter("create_time", create_time) :
                new ObjectParameter("create_time", typeof(System.DateTime));
    
            var create_accountParameter = create_account != null ?
                new ObjectParameter("create_account", create_account) :
                new ObjectParameter("create_account", typeof(string));
    
            var update_timeParameter = update_time.HasValue ?
                new ObjectParameter("update_time", update_time) :
                new ObjectParameter("update_time", typeof(System.DateTime));
    
            var update_accountParameter = update_account != null ?
                new ObjectParameter("update_account", update_account) :
                new ObjectParameter("update_account", typeof(string));
    
            var review_accountParameter = review_account != null ?
                new ObjectParameter("review_account", review_account) :
                new ObjectParameter("review_account", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_insert2PhoneList_Result>("usp_insert2PhoneList", u_idParameter, phoneParameter, create_timeParameter, create_accountParameter, update_timeParameter, update_accountParameter, review_accountParameter);
        }
    
        public virtual ObjectResult<usp_insert2SYSTEMLOG_Result> usp_insert2SYSTEMLOG(string sys_name, string sys_action, Nullable<System.DateTime> sys_stime, Nullable<System.DateTime> sys_etime, Nullable<int> sys_a_count, Nullable<int> sys_s_count, Nullable<int> sys_f_count, string sys_msg, Nullable<bool> sys_result)
        {
            var sys_nameParameter = sys_name != null ?
                new ObjectParameter("sys_name", sys_name) :
                new ObjectParameter("sys_name", typeof(string));
    
            var sys_actionParameter = sys_action != null ?
                new ObjectParameter("sys_action", sys_action) :
                new ObjectParameter("sys_action", typeof(string));
    
            var sys_stimeParameter = sys_stime.HasValue ?
                new ObjectParameter("sys_stime", sys_stime) :
                new ObjectParameter("sys_stime", typeof(System.DateTime));
    
            var sys_etimeParameter = sys_etime.HasValue ?
                new ObjectParameter("sys_etime", sys_etime) :
                new ObjectParameter("sys_etime", typeof(System.DateTime));
    
            var sys_a_countParameter = sys_a_count.HasValue ?
                new ObjectParameter("sys_a_count", sys_a_count) :
                new ObjectParameter("sys_a_count", typeof(int));
    
            var sys_s_countParameter = sys_s_count.HasValue ?
                new ObjectParameter("sys_s_count", sys_s_count) :
                new ObjectParameter("sys_s_count", typeof(int));
    
            var sys_f_countParameter = sys_f_count.HasValue ?
                new ObjectParameter("sys_f_count", sys_f_count) :
                new ObjectParameter("sys_f_count", typeof(int));
    
            var sys_msgParameter = sys_msg != null ?
                new ObjectParameter("sys_msg", sys_msg) :
                new ObjectParameter("sys_msg", typeof(string));
    
            var sys_resultParameter = sys_result.HasValue ?
                new ObjectParameter("sys_result", sys_result) :
                new ObjectParameter("sys_result", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_insert2SYSTEMLOG_Result>("usp_insert2SYSTEMLOG", sys_nameParameter, sys_actionParameter, sys_stimeParameter, sys_etimeParameter, sys_a_countParameter, sys_s_countParameter, sys_f_countParameter, sys_msgParameter, sys_resultParameter);
        }
    
        public virtual ObjectResult<usp_insert2TextMessageProfile_Result> usp_insert2TextMessageProfile(string name, string position, string textMessagebody, Nullable<System.DateTime> create_time, string create_account, Nullable<System.DateTime> update_time, string update_account, string review_account)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var positionParameter = position != null ?
                new ObjectParameter("position", position) :
                new ObjectParameter("position", typeof(string));
    
            var textMessagebodyParameter = textMessagebody != null ?
                new ObjectParameter("TextMessagebody", textMessagebody) :
                new ObjectParameter("TextMessagebody", typeof(string));
    
            var create_timeParameter = create_time.HasValue ?
                new ObjectParameter("create_time", create_time) :
                new ObjectParameter("create_time", typeof(System.DateTime));
    
            var create_accountParameter = create_account != null ?
                new ObjectParameter("create_account", create_account) :
                new ObjectParameter("create_account", typeof(string));
    
            var update_timeParameter = update_time.HasValue ?
                new ObjectParameter("update_time", update_time) :
                new ObjectParameter("update_time", typeof(System.DateTime));
    
            var update_accountParameter = update_account != null ?
                new ObjectParameter("update_account", update_account) :
                new ObjectParameter("update_account", typeof(string));
    
            var review_accountParameter = review_account != null ?
                new ObjectParameter("review_account", review_account) :
                new ObjectParameter("review_account", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_insert2TextMessageProfile_Result>("usp_insert2TextMessageProfile", nameParameter, positionParameter, textMessagebodyParameter, create_timeParameter, create_accountParameter, update_timeParameter, update_accountParameter, review_accountParameter);
        }
    
        public virtual ObjectResult<usp_insert2Users_Result> usp_insert2Users(string u_id, string u_name, string u_pwd, Nullable<System.DateTime> create_time, string create_account, Nullable<System.DateTime> update_time, string update_account, string review_account)
        {
            var u_idParameter = u_id != null ?
                new ObjectParameter("u_id", u_id) :
                new ObjectParameter("u_id", typeof(string));
    
            var u_nameParameter = u_name != null ?
                new ObjectParameter("u_name", u_name) :
                new ObjectParameter("u_name", typeof(string));
    
            var u_pwdParameter = u_pwd != null ?
                new ObjectParameter("u_pwd", u_pwd) :
                new ObjectParameter("u_pwd", typeof(string));
    
            var create_timeParameter = create_time.HasValue ?
                new ObjectParameter("create_time", create_time) :
                new ObjectParameter("create_time", typeof(System.DateTime));
    
            var create_accountParameter = create_account != null ?
                new ObjectParameter("create_account", create_account) :
                new ObjectParameter("create_account", typeof(string));
    
            var update_timeParameter = update_time.HasValue ?
                new ObjectParameter("update_time", update_time) :
                new ObjectParameter("update_time", typeof(System.DateTime));
    
            var update_accountParameter = update_account != null ?
                new ObjectParameter("update_account", update_account) :
                new ObjectParameter("update_account", typeof(string));
    
            var review_accountParameter = review_account != null ?
                new ObjectParameter("review_account", review_account) :
                new ObjectParameter("review_account", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_insert2Users_Result>("usp_insert2Users", u_idParameter, u_nameParameter, u_pwdParameter, create_timeParameter, create_accountParameter, update_timeParameter, update_accountParameter, review_accountParameter);
        }
    
        public virtual ObjectResult<usp_setNotifyCount_Result> usp_setNotifyCount(Nullable<int> w, Nullable<int> e, Nullable<int> f, string mode, string type, string s_no_X)
        {
            var wParameter = w.HasValue ?
                new ObjectParameter("W", w) :
                new ObjectParameter("W", typeof(int));
    
            var eParameter = e.HasValue ?
                new ObjectParameter("E", e) :
                new ObjectParameter("E", typeof(int));
    
            var fParameter = f.HasValue ?
                new ObjectParameter("F", f) :
                new ObjectParameter("F", typeof(int));
    
            var modeParameter = mode != null ?
                new ObjectParameter("Mode", mode) :
                new ObjectParameter("Mode", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var s_no_XParameter = s_no_X != null ?
                new ObjectParameter("s_no_X", s_no_X) :
                new ObjectParameter("s_no_X", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_setNotifyCount_Result>("usp_setNotifyCount", wParameter, eParameter, fParameter, modeParameter, typeParameter, s_no_XParameter);
        }
    
        public virtual ObjectResult<usp_setNotifyStatus_Result> usp_setNotifyStatus(string mode, string s_status, string s_no_X, Nullable<int> s_id, Nullable<bool> notifyStatus)
        {
            var modeParameter = mode != null ?
                new ObjectParameter("Mode", mode) :
                new ObjectParameter("Mode", typeof(string));
    
            var s_statusParameter = s_status != null ?
                new ObjectParameter("s_status", s_status) :
                new ObjectParameter("s_status", typeof(string));
    
            var s_no_XParameter = s_no_X != null ?
                new ObjectParameter("s_no_X", s_no_X) :
                new ObjectParameter("s_no_X", typeof(string));
    
            var s_idParameter = s_id.HasValue ?
                new ObjectParameter("s_id", s_id) :
                new ObjectParameter("s_id", typeof(int));
    
            var notifyStatusParameter = notifyStatus.HasValue ?
                new ObjectParameter("notifyStatus", notifyStatus) :
                new ObjectParameter("notifyStatus", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_setNotifyStatus_Result>("usp_setNotifyStatus", modeParameter, s_statusParameter, s_no_XParameter, s_idParameter, notifyStatusParameter);
        }
    
        public virtual ObjectResult<usp_update2EmailList_Result> usp_update2EmailList(Nullable<int> id, string email, Nullable<System.DateTime> update_time, string update_account, string review_account)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var update_timeParameter = update_time.HasValue ?
                new ObjectParameter("update_time", update_time) :
                new ObjectParameter("update_time", typeof(System.DateTime));
    
            var update_accountParameter = update_account != null ?
                new ObjectParameter("update_account", update_account) :
                new ObjectParameter("update_account", typeof(string));
    
            var review_accountParameter = review_account != null ?
                new ObjectParameter("review_account", review_account) :
                new ObjectParameter("review_account", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_update2EmailList_Result>("usp_update2EmailList", idParameter, emailParameter, update_timeParameter, update_accountParameter, review_accountParameter);
        }
    
        public virtual ObjectResult<usp_update2MailServerProfile_Result> usp_update2MailServerProfile(Nullable<int> id, string name, string position, Nullable<int> port, string mailfrom, string mailsubject, string mailbody, Nullable<System.DateTime> update_time, string update_account, string review_account)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var positionParameter = position != null ?
                new ObjectParameter("position", position) :
                new ObjectParameter("position", typeof(string));
    
            var portParameter = port.HasValue ?
                new ObjectParameter("port", port) :
                new ObjectParameter("port", typeof(int));
    
            var mailfromParameter = mailfrom != null ?
                new ObjectParameter("mailfrom", mailfrom) :
                new ObjectParameter("mailfrom", typeof(string));
    
            var mailsubjectParameter = mailsubject != null ?
                new ObjectParameter("mailsubject", mailsubject) :
                new ObjectParameter("mailsubject", typeof(string));
    
            var mailbodyParameter = mailbody != null ?
                new ObjectParameter("mailbody", mailbody) :
                new ObjectParameter("mailbody", typeof(string));
    
            var update_timeParameter = update_time.HasValue ?
                new ObjectParameter("update_time", update_time) :
                new ObjectParameter("update_time", typeof(System.DateTime));
    
            var update_accountParameter = update_account != null ?
                new ObjectParameter("update_account", update_account) :
                new ObjectParameter("update_account", typeof(string));
    
            var review_accountParameter = review_account != null ?
                new ObjectParameter("review_account", review_account) :
                new ObjectParameter("review_account", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_update2MailServerProfile_Result>("usp_update2MailServerProfile", idParameter, nameParameter, positionParameter, portParameter, mailfromParameter, mailsubjectParameter, mailbodyParameter, update_timeParameter, update_accountParameter, review_accountParameter);
        }
    
        public virtual ObjectResult<usp_update2MonitorParams_Result> usp_update2MonitorParams(string s_no, string value, Nullable<System.DateTime> update_time, string update_account, string review_account)
        {
            var s_noParameter = s_no != null ?
                new ObjectParameter("s_no", s_no) :
                new ObjectParameter("s_no", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var update_timeParameter = update_time.HasValue ?
                new ObjectParameter("update_time", update_time) :
                new ObjectParameter("update_time", typeof(System.DateTime));
    
            var update_accountParameter = update_account != null ?
                new ObjectParameter("update_account", update_account) :
                new ObjectParameter("update_account", typeof(string));
    
            var review_accountParameter = review_account != null ?
                new ObjectParameter("review_account", review_account) :
                new ObjectParameter("review_account", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_update2MonitorParams_Result>("usp_update2MonitorParams", s_noParameter, valueParameter, update_timeParameter, update_accountParameter, review_accountParameter);
        }
    
        public virtual int usp_update2MonitorProperty(Nullable<bool> isenable, string s_no, string s_class, string s_type, string s_sys, string s_subject, string s_content, string s_position, Nullable<int> s_timeout, Nullable<int> s_frequency, string params_host, Nullable<int> mailServerProfile, Nullable<int> textMessageProfile, Nullable<bool> w_sendmail, Nullable<bool> w_sendmessage, Nullable<int> w_notify, Nullable<int> w_mail_notify_limit, Nullable<int> w_message_notify_limit, Nullable<bool> e_sendmail, Nullable<bool> e_sendmessage, Nullable<int> e_notify, Nullable<int> e_mail_notify_limit, Nullable<int> e_message_notify_limit, Nullable<bool> f_sendmail, Nullable<bool> f_sendmessage, Nullable<int> f_notify, Nullable<int> f_mail_notify_limit, Nullable<int> f_message_notify_limit, Nullable<bool> needNonitorPrams, string value, string sysadmin, Nullable<System.DateTime> update_time, string update_account, string review_account)
        {
            var isenableParameter = isenable.HasValue ?
                new ObjectParameter("isenable", isenable) :
                new ObjectParameter("isenable", typeof(bool));
    
            var s_noParameter = s_no != null ?
                new ObjectParameter("s_no", s_no) :
                new ObjectParameter("s_no", typeof(string));
    
            var s_classParameter = s_class != null ?
                new ObjectParameter("s_class", s_class) :
                new ObjectParameter("s_class", typeof(string));
    
            var s_typeParameter = s_type != null ?
                new ObjectParameter("s_type", s_type) :
                new ObjectParameter("s_type", typeof(string));
    
            var s_sysParameter = s_sys != null ?
                new ObjectParameter("s_sys", s_sys) :
                new ObjectParameter("s_sys", typeof(string));
    
            var s_subjectParameter = s_subject != null ?
                new ObjectParameter("s_subject", s_subject) :
                new ObjectParameter("s_subject", typeof(string));
    
            var s_contentParameter = s_content != null ?
                new ObjectParameter("s_content", s_content) :
                new ObjectParameter("s_content", typeof(string));
    
            var s_positionParameter = s_position != null ?
                new ObjectParameter("s_position", s_position) :
                new ObjectParameter("s_position", typeof(string));
    
            var s_timeoutParameter = s_timeout.HasValue ?
                new ObjectParameter("s_timeout", s_timeout) :
                new ObjectParameter("s_timeout", typeof(int));
    
            var s_frequencyParameter = s_frequency.HasValue ?
                new ObjectParameter("s_frequency", s_frequency) :
                new ObjectParameter("s_frequency", typeof(int));
    
            var params_hostParameter = params_host != null ?
                new ObjectParameter("params_host", params_host) :
                new ObjectParameter("params_host", typeof(string));
    
            var mailServerProfileParameter = mailServerProfile.HasValue ?
                new ObjectParameter("MailServerProfile", mailServerProfile) :
                new ObjectParameter("MailServerProfile", typeof(int));
    
            var textMessageProfileParameter = textMessageProfile.HasValue ?
                new ObjectParameter("TextMessageProfile", textMessageProfile) :
                new ObjectParameter("TextMessageProfile", typeof(int));
    
            var w_sendmailParameter = w_sendmail.HasValue ?
                new ObjectParameter("w_sendmail", w_sendmail) :
                new ObjectParameter("w_sendmail", typeof(bool));
    
            var w_sendmessageParameter = w_sendmessage.HasValue ?
                new ObjectParameter("w_sendmessage", w_sendmessage) :
                new ObjectParameter("w_sendmessage", typeof(bool));
    
            var w_notifyParameter = w_notify.HasValue ?
                new ObjectParameter("w_notify", w_notify) :
                new ObjectParameter("w_notify", typeof(int));
    
            var w_mail_notify_limitParameter = w_mail_notify_limit.HasValue ?
                new ObjectParameter("w_mail_notify_limit", w_mail_notify_limit) :
                new ObjectParameter("w_mail_notify_limit", typeof(int));
    
            var w_message_notify_limitParameter = w_message_notify_limit.HasValue ?
                new ObjectParameter("w_message_notify_limit", w_message_notify_limit) :
                new ObjectParameter("w_message_notify_limit", typeof(int));
    
            var e_sendmailParameter = e_sendmail.HasValue ?
                new ObjectParameter("e_sendmail", e_sendmail) :
                new ObjectParameter("e_sendmail", typeof(bool));
    
            var e_sendmessageParameter = e_sendmessage.HasValue ?
                new ObjectParameter("e_sendmessage", e_sendmessage) :
                new ObjectParameter("e_sendmessage", typeof(bool));
    
            var e_notifyParameter = e_notify.HasValue ?
                new ObjectParameter("e_notify", e_notify) :
                new ObjectParameter("e_notify", typeof(int));
    
            var e_mail_notify_limitParameter = e_mail_notify_limit.HasValue ?
                new ObjectParameter("e_mail_notify_limit", e_mail_notify_limit) :
                new ObjectParameter("e_mail_notify_limit", typeof(int));
    
            var e_message_notify_limitParameter = e_message_notify_limit.HasValue ?
                new ObjectParameter("e_message_notify_limit", e_message_notify_limit) :
                new ObjectParameter("e_message_notify_limit", typeof(int));
    
            var f_sendmailParameter = f_sendmail.HasValue ?
                new ObjectParameter("f_sendmail", f_sendmail) :
                new ObjectParameter("f_sendmail", typeof(bool));
    
            var f_sendmessageParameter = f_sendmessage.HasValue ?
                new ObjectParameter("f_sendmessage", f_sendmessage) :
                new ObjectParameter("f_sendmessage", typeof(bool));
    
            var f_notifyParameter = f_notify.HasValue ?
                new ObjectParameter("f_notify", f_notify) :
                new ObjectParameter("f_notify", typeof(int));
    
            var f_mail_notify_limitParameter = f_mail_notify_limit.HasValue ?
                new ObjectParameter("f_mail_notify_limit", f_mail_notify_limit) :
                new ObjectParameter("f_mail_notify_limit", typeof(int));
    
            var f_message_notify_limitParameter = f_message_notify_limit.HasValue ?
                new ObjectParameter("f_message_notify_limit", f_message_notify_limit) :
                new ObjectParameter("f_message_notify_limit", typeof(int));
    
            var needNonitorPramsParameter = needNonitorPrams.HasValue ?
                new ObjectParameter("NeedNonitorPrams", needNonitorPrams) :
                new ObjectParameter("NeedNonitorPrams", typeof(bool));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var sysadminParameter = sysadmin != null ?
                new ObjectParameter("sysadmin", sysadmin) :
                new ObjectParameter("sysadmin", typeof(string));
    
            var update_timeParameter = update_time.HasValue ?
                new ObjectParameter("update_time", update_time) :
                new ObjectParameter("update_time", typeof(System.DateTime));
    
            var update_accountParameter = update_account != null ?
                new ObjectParameter("update_account", update_account) :
                new ObjectParameter("update_account", typeof(string));
    
            var review_accountParameter = review_account != null ?
                new ObjectParameter("review_account", review_account) :
                new ObjectParameter("review_account", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_update2MonitorProperty", isenableParameter, s_noParameter, s_classParameter, s_typeParameter, s_sysParameter, s_subjectParameter, s_contentParameter, s_positionParameter, s_timeoutParameter, s_frequencyParameter, params_hostParameter, mailServerProfileParameter, textMessageProfileParameter, w_sendmailParameter, w_sendmessageParameter, w_notifyParameter, w_mail_notify_limitParameter, w_message_notify_limitParameter, e_sendmailParameter, e_sendmessageParameter, e_notifyParameter, e_mail_notify_limitParameter, e_message_notify_limitParameter, f_sendmailParameter, f_sendmessageParameter, f_notifyParameter, f_mail_notify_limitParameter, f_message_notify_limitParameter, needNonitorPramsParameter, valueParameter, sysadminParameter, update_timeParameter, update_accountParameter, review_accountParameter);
        }
    
        public virtual ObjectResult<usp_update2NotifyList_Result> usp_update2NotifyList(Nullable<int> id, string g_id, string u_id, Nullable<System.DateTime> update_time, string update_account, string review_account)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var g_idParameter = g_id != null ?
                new ObjectParameter("g_id", g_id) :
                new ObjectParameter("g_id", typeof(string));
    
            var u_idParameter = u_id != null ?
                new ObjectParameter("u_id", u_id) :
                new ObjectParameter("u_id", typeof(string));
    
            var update_timeParameter = update_time.HasValue ?
                new ObjectParameter("update_time", update_time) :
                new ObjectParameter("update_time", typeof(System.DateTime));
    
            var update_accountParameter = update_account != null ?
                new ObjectParameter("update_account", update_account) :
                new ObjectParameter("update_account", typeof(string));
    
            var review_accountParameter = review_account != null ?
                new ObjectParameter("review_account", review_account) :
                new ObjectParameter("review_account", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_update2NotifyList_Result>("usp_update2NotifyList", idParameter, g_idParameter, u_idParameter, update_timeParameter, update_accountParameter, review_accountParameter);
        }
    
        public virtual ObjectResult<usp_update2PhoneList_Result> usp_update2PhoneList(Nullable<int> id, string phone, Nullable<System.DateTime> update_time, string update_account, string review_account)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var update_timeParameter = update_time.HasValue ?
                new ObjectParameter("update_time", update_time) :
                new ObjectParameter("update_time", typeof(System.DateTime));
    
            var update_accountParameter = update_account != null ?
                new ObjectParameter("update_account", update_account) :
                new ObjectParameter("update_account", typeof(string));
    
            var review_accountParameter = review_account != null ?
                new ObjectParameter("review_account", review_account) :
                new ObjectParameter("review_account", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_update2PhoneList_Result>("usp_update2PhoneList", idParameter, phoneParameter, update_timeParameter, update_accountParameter, review_accountParameter);
        }
    
        public virtual ObjectResult<usp_update2SHOWLOG_Result> usp_update2SHOWLOG(string s_no, string s_status)
        {
            var s_noParameter = s_no != null ?
                new ObjectParameter("s_no", s_no) :
                new ObjectParameter("s_no", typeof(string));
    
            var s_statusParameter = s_status != null ?
                new ObjectParameter("s_status", s_status) :
                new ObjectParameter("s_status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_update2SHOWLOG_Result>("usp_update2SHOWLOG", s_noParameter, s_statusParameter);
        }
    
        public virtual ObjectResult<usp_update2TextMessageProfile_Result> usp_update2TextMessageProfile(Nullable<int> id, string name, string position, string textMessagebody, Nullable<System.DateTime> update_time, string update_account, string review_account)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var positionParameter = position != null ?
                new ObjectParameter("position", position) :
                new ObjectParameter("position", typeof(string));
    
            var textMessagebodyParameter = textMessagebody != null ?
                new ObjectParameter("TextMessagebody", textMessagebody) :
                new ObjectParameter("TextMessagebody", typeof(string));
    
            var update_timeParameter = update_time.HasValue ?
                new ObjectParameter("update_time", update_time) :
                new ObjectParameter("update_time", typeof(System.DateTime));
    
            var update_accountParameter = update_account != null ?
                new ObjectParameter("update_account", update_account) :
                new ObjectParameter("update_account", typeof(string));
    
            var review_accountParameter = review_account != null ?
                new ObjectParameter("review_account", review_account) :
                new ObjectParameter("review_account", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_update2TextMessageProfile_Result>("usp_update2TextMessageProfile", idParameter, nameParameter, positionParameter, textMessagebodyParameter, update_timeParameter, update_accountParameter, review_accountParameter);
        }
    
        public virtual ObjectResult<usp_update2Users_Result> usp_update2Users(string u_id, string u_name, string u_pwd, Nullable<System.DateTime> update_time, string update_account, string review_account)
        {
            var u_idParameter = u_id != null ?
                new ObjectParameter("u_id", u_id) :
                new ObjectParameter("u_id", typeof(string));
    
            var u_nameParameter = u_name != null ?
                new ObjectParameter("u_name", u_name) :
                new ObjectParameter("u_name", typeof(string));
    
            var u_pwdParameter = u_pwd != null ?
                new ObjectParameter("u_pwd", u_pwd) :
                new ObjectParameter("u_pwd", typeof(string));
    
            var update_timeParameter = update_time.HasValue ?
                new ObjectParameter("update_time", update_time) :
                new ObjectParameter("update_time", typeof(System.DateTime));
    
            var update_accountParameter = update_account != null ?
                new ObjectParameter("update_account", update_account) :
                new ObjectParameter("update_account", typeof(string));
    
            var review_accountParameter = review_account != null ?
                new ObjectParameter("review_account", review_account) :
                new ObjectParameter("review_account", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_update2Users_Result>("usp_update2Users", u_idParameter, u_nameParameter, u_pwdParameter, update_timeParameter, update_accountParameter, review_accountParameter);
        }
    }
}
